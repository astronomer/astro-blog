@import 'variables.css';

$btnBorderWidth: 0.125rem; /* 2px */

/* Heading Text */
@mixin textHeading {
  font-family: var(--font-sans);
  font-weight: 700;
  color: var(--c-text-heading);
}

/* Button */
@mixin button {
  position: relative;
  display: inline-block;
  font-family: var(--font-sans);
  font-weight: 500;
  font-size: 1rem;
  line-height: 1.5rem;
  padding: resolve(0.375rem - $btnBorderWidth) resolve(1rem - $btnBorderWidth);
  white-space: nowrap;
  text-align: center;
  border-radius: var(--radius-btn);
  border: $btnBorderWidth solid transparent;
  cursor: pointer;
  user-select: none;
  transition-timing-function: ease-in-out;
  transition-duration: 0.3s;
  transition-property: box-shadow, color, background, border-color;

  &[disabled] {
    cursor: not-allowed;
  }

  &:focus,
  &:active {
    outline: none;
  }
}

/* Button Style - Text Link */
@mixin buttonAsLink {
  padding: 0;
  height: auto;
  line-height: inherit;
  border-radius: 0;
}

@mixin focusShadow($colorVar: --blue11) {

  &:not([disabled]):focus {
    box-shadow: 0 0 0 3px color(var($colorVar) a(0.4));
  }
}

@mixin solidButton($background, $hoverBackground, $textColor: --white10) {
  @include focusShadow($background);

  border: $btnBorderWidth solid var($background);
  color: var($textColor);
  background-color: var($background);

  &[disabled]:not([data-inflight='true']) {
    color: var(--gray08);
    border-color: var(--white13);
    background-color: var(--white13);
  }

  &:not([disabled]):hover {
    border-color: var($hoverBackground);
    color: var($textColor);
    background-color: var($hoverBackground);
  }
}

@mixin outlineButton($color) {
  @include focusShadow($color);

  border: $btnBorderWidth solid currentColor;
  color: var($color);
  background-color: var(--white10);

  &[disabled]:not([data-inflight='true']) {
    color: var(--gray06);
  }

  &:not([disabled]):hover {
    background-color: color(var($color) a(0.15));
  }
}

/* Input */
@mixin input {
  @include focusShadow(--c-input-border-color-focused);
  $height: 2.25rem;

  display: block;
  padding: 0 0.5rem;
  width: 100%;
  height: $height;
  line-height: $height;
  outline: none;
  border-radius: var(--radius-m);
  border: $btnBorderWidth solid var(--c-input-border-color);
  color: var(--c-input-color);
  background-color: var(--c-input-bg-color);
  font-size: var(--font-m);
  font-weight: 400;
  font-family: inherit;
  transition-timing-function: ease-in-out;
  transition-duration: 0.3s;
  transition-property: box-shadow, border-color, background;
  appearance: none;

  &::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  &:disabled {
    user-select: none;
    pointer-events: none;
    opacity: 0.4;
  }

  &:not([disabled]) {

    &:hover {
      border-color: var(--c-input-border-color-hover);
      background-color: var(--c-input-bg-color-hover);
    }

    &:focus {
      border-color: var(--c-input-border-color-focused);
      background-color: var(--c-input-bg-color-focused);
    }
  }

  &::placeholder {
    color: var(--gray06);
  }
}

@mixin inputGroup {
  display: block;
  margin-bottom: 1rem;
  max-width: var(--max-line-length);

  &:last-child {
    margin-bottom: 0;
  }
}

/* Input - Label */
@mixin label {
  display: block;
  margin-bottom: 0.5rem;
  font-size: var(--font-s);
}

@mixin helperText {
  font-size: 0.875rem;
  color: var(--c-text-muted);
}

@mixin visuallyHidden {
  position: absolute;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  border: 0;
  width: 1px;
  height: 1px;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(50%);
}
